name: CI (Windows, offline HF)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: windows-latest
    timeout-minutes: 25

    env:
      HF_HUB_OFFLINE: "1"
      TRANSFORMERS_OFFLINE: "1"
      SRO_CACHE_DIR: models_cache
      HF_HOME: models_cache
      SENTENCE_TRANSFORMERS_HOME: models_cache
      PYTHONHASHSEED: "0"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Restore models_cache
        id: cache-restore
        uses: actions/cache/restore@v4
        with:
          path: models_cache
          key: models-cache-win-v1

      - name: Fail if cache not present (no HF in CI)
        if: ${{ steps.cache-restore.outputs.cache-hit != 'true' }}
        shell: pwsh
        run: |
          Write-Error "ERROR: models_cache not found in CI cache.`nRun the 'Seed HF models cache' workflow once."
          exit 1

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      # Requirements path exists => use it
      - name: Install deps (requirements.txt)
        if: ${{ hashFiles('requirements.txt') != '' }}
        shell: pwsh
        run: |
          python -m pip install -U pip wheel setuptools
          pip install -r requirements.txt

      # No requirements.txt => fallback minimal set
      - name: Install deps (fallback minimal)
        if: ${{ hashFiles('requirements.txt') == '' }}
        shell: pwsh
        run: |
          python -m pip install -U pip wheel setuptools
          pip install --index-url https://download.pytorch.org/whl/cpu torch
          pip install "transformers<5" sentence-transformers rank-bm25 numpy scikit-learn pytest

      - name: list cache
        shell: pwsh
        run: |
          Write-Host "models_cache size:"
          Get-ChildItem -Recurse models_cache | Measure-Object -Property Length -Sum
          if (-not (Test-Path models_cache)) { Write-Error "models_cache missing"; exit 2 }

      - name: Run tests (quiet)
        shell: pwsh
        run: pytest -q

