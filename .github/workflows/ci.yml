name: ci
on:
  push:
  pull_request:

jobs:
  test:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: pip

      - name: Install deps (fallback minimal)
        shell: pwsh
        run: |
          python -m pip install -U pip
          pip install torch --index-url https://download.pytorch.org/whl/cpu
          pip install -r requirements.txt
          pip install sentence-transformers

      - name: Restore models_cache
        uses: actions/cache/restore@v4
        with:
          path: models_cache
          key: models-cache-win-v2
          restore-keys: |
            models-cache-win-

      - name: list cache
        shell: pwsh
        run: |
          Write-Host "models_cache size:"
          Get-ChildItem -Recurse models_cache | Measure-Object -Property Length -Sum
          if (-not (Test-Path models_cache)) { Write-Error "models_cache missing"; exit 2 }
          # sanity check: ST config.json must exist
           = Get-ChildItem -Recurse models_cache -Filter config.json | Where-Object { .FullName -match "sentence-transformers.*all-MiniLM-L6-v2" }
          if (-not ) { Write-Error "Sentence-Transformers all-MiniLM-L6-v2 not found in cache"; exit 3 }

      - name: Prepare dev data
        shell: pwsh
        env:
          HF_HUB_OFFLINE: "1"
          TRANSFORMERS_OFFLINE: "1"
          SRO_CACHE_DIR: models_cache
          HF_HOME: models_cache
          SENTENCE_TRANSFORMERS_HOME: models_cache
          TRANSFORMERS_CACHE: models_cache
        run: |
          python -m scripts.make_dev_pairs

      - name: Run tests (offline)
        shell: pwsh
        env:
          HF_HUB_OFFLINE: "1"
          TRANSFORMERS_OFFLINE: "1"
          SRO_CACHE_DIR: models_cache
          HF_HOME: models_cache
          SENTENCE_TRANSFORMERS_HOME: models_cache
          TRANSFORMERS_CACHE: models_cache
        run: pytest -q
