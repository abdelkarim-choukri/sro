name: CI (Windows, offline HF)

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: windows-latest
    timeout-minutes: 25

    # Offline for HuggingFace; PyPI can still be used for pip.
    env:
      HF_HUB_OFFLINE: "1"
      TRANSFORMERS_OFFLINE: "1"
      SRO_CACHE_DIR: models_cache
      HF_HOME: models_cache
      SENTENCE_TRANSFORMERS_HOME: models_cache
      TRANSFORMERS_CACHE: models_cache
      HF_HUB_CACHE: models_cache/hub
      PYTHONIOENCODING: "utf-8"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: pip

      # Use your requirements if present; otherwise a minimal set.
      - name: Install deps (requirements.txt)
        if: ${{ hashFiles('requirements.txt') != '' }}
        shell: pwsh
        run: |
          python -m pip install -U pip wheel setuptools
          pip install -r requirements.txt
          pip install torch --index-url https://download.pytorch.org/whl/cpu

      - name: Install deps (fallback minimal)
        if: ${{ hashFiles('requirements.txt') == '' }}
        shell: pwsh
        run: |
          python -m pip install -U pip wheel setuptools
          pip install torch --index-url https://download.pytorch.org/whl/cpu
          pip install "transformers<5" sentence-transformers rank-bm25 numpy scikit-learn pytest

      - name: Restore models_cache
        id: cache-restore
        uses: actions/cache/restore@v4
        with:
          path: models_cache
          key: models-cache-win-v2        # <-- must match your seeding workflow key
          restore-keys: |
            models-cache-win-

      - name: Fail if cache not present (seed first)
        if: ${{ steps.cache-restore.outputs.cache-hit != 'true' }}
        shell: pwsh
        run: |
          Write-Error "models_cache not found in cache. Run the 'seed' workflow to create key models-cache-win-v2."
          exit 1

      - name: list cache
        shell: pwsh
        run: |
          Write-Host "models_cache size:"
          Get-ChildItem -Recurse models_cache | Measure-Object -Property Length -Sum

      - name: Sanity: check ST snapshot
        shell: pwsh
        run: |
          $st = Get-ChildItem models_cache/hub/models--sentence-transformers--all-MiniLM-L6-v2/snapshots/*/config.json -ErrorAction SilentlyContinue
          if (-not $st) {
            Write-Host "Contents of models_cache/hub:"
            Get-ChildItem -Recurse models_cache/hub | Select-Object FullName
            Write-Error "Missing sentence-transformers/all-MiniLM-L6-v2 snapshot in cache"
            exit 4
          }

      - name: Prepare dev data
        shell: pwsh
        run: |
          python -m scripts.make_dev_pairs
          if (-not (Test-Path "data/processed/dev_pairs.csv")) {
            Write-Error "data/processed/dev_pairs.csv was not created"
            exit 3
          }

      - name: Run tests (quiet)
        shell: pwsh
        run: pytest -q
